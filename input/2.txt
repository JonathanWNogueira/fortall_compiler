inteiro ano, duracaoSimulacao;
inteiro populacaoCoelhos, populacaoLobos;
inteiro maxCoelhos, maxLobos;
inteiro nascimentosCoelhos, mortesCoelhos;
inteiro nascimentosLobos, mortesLobos;
inteiro recursosDisponiveis, fatorClima;
logico desastreNatural;
inteiro i, eventoAleatorio;

    populacaoCoelhos = 100;
    populacaoLobos = 20;
    maxCoelhos = 0;
    maxLobos = 0;
    duracaoSimulacao = 20;
    recursosDisponiveis = 500;
    
    escreva("SIMULADOR DE ECOSSISTEMA - LOBOS && COELHOS");
    escreva("\nAno 0: Coelhos = ", populacaoCoelhos, " | Lobos = ", populacaoLobos);
    
    ano = 1;
    enquanto (ano <= duracaoSimulacao) {

        eventoAleatorio = ano % 10;
        se (eventoAleatorio == 0) entao {
            fatorClima = 2; 
        }
        se (eventoAleatorio == 1) entao {
            fatorClima = 0; 
        } 
        se (eventoAleatorio > 1) entao {
            fatorClima = 1; 
        }
        
        desastreNatural = falso;
        se ((ano % 7) == 0) entao {
            desastreNatural = verdadeiro;
            escreva("\nDESASTRE NATURAL neste ano!");
        }

        nascimentosCoelhos = (populacaoCoelhos * recursosDisponiveis) / 200;

        nascimentosCoelhos = nascimentosCoelhos * fatorClima;
        se (fatorClima == 0) entao {
            nascimentosCoelhos = nascimentosCoelhos / 2;
        }

        mortesCoelhos = populacaoCoelhos / 8;
        
        mortesCoelhos = mortesCoelhos + (populacaoLobos * 3);
        
        se (desastreNatural) entao {
            mortesCoelhos = mortesCoelhos + (populacaoCoelhos / 2);
        }
        
        populacaoCoelhos = populacaoCoelhos + nascimentosCoelhos - mortesCoelhos;
        se (populacaoCoelhos < 10) entao {
            populacaoCoelhos = 10; 
        }

        nascimentosLobos = (populacaoLobos * populacaoCoelhos) / 50;
        
        mortesLobos = populacaoLobos / 4;
        
        mortesLobos = mortesLobos + ((populacaoLobos * populacaoLobos) / 100);
        
        se (fatorClima == 0) entao {
            mortesLobos = mortesLobos * 2;
        }
        
        se (desastreNatural) entao {
            mortesLobos = mortesLobos + (populacaoLobos / 3);
        }
        
        populacaoLobos = populacaoLobos + nascimentosLobos - mortesLobos;
        se (populacaoLobos < 2) entao {
            populacaoLobos = 2; 
        }
        
        recursosDisponiveis = 300 + (ano * 20);
        recursosDisponiveis = recursosDisponiveis - (populacaoCoelhos * 2);
        se (recursosDisponiveis < 100) entao {
            recursosDisponiveis = 100; 
        }
        
        se (populacaoCoelhos > maxCoelhos) entao {
            maxCoelhos = populacaoCoelhos;
        }
        se (populacaoLobos > maxLobos) entao {
            maxLobos = populacaoLobos;
        }
        
        escreva("\nAno ", ano, ":");
        escreva(" Coelhos = ", populacaoCoelhos);
        escreva(" | Lobos = ", populacaoLobos);
        escreva(" | Recursos = ", recursosDisponiveis);
        
        se (ano % 5 == 0) entao {
            escreva("\n  [Nasc Coelhos: ", nascimentosCoelhos, " | Mortes Coelhos: ", mortesCoelhos, "]");
            escreva("\n  [Nasc Lobos: ", nascimentosLobos, " | Mortes Lobos: ", mortesLobos, "]");
        }
        ano = ano + 1;
    }
    

    escreva("\n\n==== RESULTADOS FINAIS ====");
    escreva("\nPopulacao final de coelhos: ", populacaoCoelhos);
    escreva("\nPopulacao final de lobos: ", populacaoLobos);
    escreva("\nMaximo historico de coelhos: ", maxCoelhos);
    escreva("\nMaximo historico de lobos: ", maxLobos);
    
    se ((populacaoCoelhos > 50) && (populacaoLobos > 5)) entao {
        escreva("\n\nECOSSISTEMA ESTaVEL: Populacoes em equilibrio");
    } 
    se (populacaoLobos < 3) entao {
        escreva("\n\nDESEQUILiBRIO: Predadores em risco de extincao");
    }
    se (populacaoCoelhos < 20) entao {
        escreva("\n\nDESEQUILiBRIO: Presas insuficientes");
    } 
    se (!(populacaoCoelhos > 50) && (populacaoLobos > 5)) entao {
        escreva("\n\nECOSSISTEMA ALTERADO: Mudan√ßas significativas ocorreram");
    }
